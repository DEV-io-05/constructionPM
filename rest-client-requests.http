### Register a new user
POST http://localhost:4000/auth/register
Content-Type: application/json

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "priyatna.dev@gmail.com",
  "password": "Password123!",
  "username": "newuser",
  "phoneNumber": "123-456-7890"
}

### Login user and get tokens
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "priyatna.dev@gmail.com",
  "password": "Password123!"
}

### Extract access_token and refresh_token from login response
> {% client.global.set("access_token", response.body.accessToken) %}
> {% client.global.set("refresh_token", response.body.refreshToken) %}

### Use the access token from login response in the Authorization header for the following requests
# @token = {{access_token}}
# @refresh_token = {{refresh_token}}

### List all users (requires superadmin or projectmanager role)
GET http://localhost:3000/users/
Authorization: Bearer {{access_token}}

### Get user by ID (authenticated users)
GET http://localhost:3000/users/1
Authorization: Bearer {{access_token}}

### Create a new user (requires superadmin or projectmanager role)
POST http://localhost:3000/users/
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "email": "createduser@example.com",
  "password": "Password123!",
  "name": "Created User",
  "role": "user"
}

### Update user by ID (requires superadmin or projectmanager role)
PUT http://localhost:3000/users/1
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "name": "Updated User Name"
}

### Delete user by ID (requires superadmin role)
DELETE http://localhost:3000/users/1
Authorization: Bearer {{access_token}}

### Logout user and revoke refresh token
POST http://localhost:3000/auth/logout
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "refreshToken": "{{refresh_token}}"
}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "refreshToken": "{{refresh_token}}"
}
